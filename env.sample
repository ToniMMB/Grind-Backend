# ⚙️  CONFIGURACIÓN DE ENTORNO - Focus Opal AI Backend
# 
# INSTRUCCIONES:
# 1. Copia este archivo como .env
# 2. Reemplaza todos los valores marcados con TODO
# 3. Genera JWT secrets ejecutando:
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# 4. Configura tu base de datos (ver SETUP_INSTRUCTIONS.md)

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# APLICACIÓN
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
NODE_ENV=development
PORT=3000
API_URL=http://localhost:3000

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# BASE DE DATOS - PostgreSQL
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 
# Opciones:
# 
# OPCIÓN A - Supabase (Recomendado - Gratis):
#   1. Ve a https://supabase.com y crea proyecto
#   2. Settings > Database > Connection String (Session mode)
#   3. Reemplaza [YOUR-PASSWORD] con tu contraseña
#   Ejemplo: postgresql://postgres.xxxxx:[PASSWORD]@aws-0-us-west-1.pooler.supabase.com:5432/postgres
# 
# OPCIÓN B - PostgreSQL Local:
#   postgresql://postgres:postgres@localhost:5432/focus_opal_ai
# 
# OPCIÓN C - Docker Compose (en este proyecto):
#   docker-compose up -d
#   postgresql://postgres:postgres@localhost:5432/focus_opal_ai
# 
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/focus_opal_ai

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# JWT SECRETS - IMPORTANTE: GENERAR VALORES ALEATORIOS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 
# GENERA VALORES EJECUTANDO ESTE COMANDO DOS VECES:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# 
# TODO: Reemplazar con valores generados aleatoriamente
JWT_ACCESS_SECRET=EJECUTA_COMANDO_CRYPTO_Y_PEGA_PRIMER_RESULTADO_AQUI
JWT_REFRESH_SECRET=EJECUTA_COMANDO_CRYPTO_Y_PEGA_SEGUNDO_RESULTADO_AQUI
JWT_ACCESS_EXPIRY=15m
JWT_REFRESH_EXPIRY=7d

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# FRONTEND - CORS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 
# En desarrollo: http://localhost:3000 (o puerto de tu frontend local)
# En producción: https://tu-app.vercel.app
# 
FRONTEND_URL=https://focus-opal-ai.vercel.app

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# RATE LIMITING - Protección contra abuso
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
RATE_LIMIT_WINDOW_MS=900000      # 15 minutos en ms
RATE_LIMIT_MAX_REQUESTS=100      # 100 requests por ventana

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# REDIS - Caché y Tracking (OPCIONAL)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 
# Si NO tienes Redis, COMENTA esta línea:
# # REDIS_URL=redis://localhost:6379
# 
# Opciones:
# - Local: redis://localhost:6379
# - Docker: redis://localhost:6379 (después de docker-compose up)
# - Upstash (gratis): redis://default:[PASSWORD]@[HOST]:6379
# 
REDIS_URL=redis://localhost:6379

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# IA - Claude (Anthropic) - OPCIONAL
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 
# Para generar insights personalizados con IA
# Obtén tu API key en: https://console.anthropic.com/
# Descomenta y agrega tu key cuando la tengas:
# 
# ANTHROPIC_API_KEY=sk-ant-api03-xxxxxxxxxxxxx

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# NOTAS IMPORTANTES
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 
# 🔒 NUNCA subas el archivo .env a Git (está en .gitignore)
# 🔄 Reinicia el servidor después de modificar variables
# 📚 Ver SETUP_INSTRUCTIONS.md para guía completa
# 🚀 Para producción, usa variables de entorno de la plataforma

